{"mappings":"AAEA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACSC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbMO,SAASC,cAAc,SAkD/BC,iBAAiB,UAjCxB,SAAuBC,GACrBA,EAAMC,iBAEN,MAAMC,EAAcL,SAASC,cAAc,kBACrCK,EAAmBC,SAASF,EAAYG,OAExCC,EAAaT,SAASC,cAAc,iBACpCS,EAAkBH,SAASE,EAAWD,OAEtCG,EAAYX,SAASC,cAAc,gBACnCW,EAAiBL,SAASI,EAAUH,OAE1C,GAAIK,MAAMP,IAAqBO,MAAMH,IAAoBG,MAAMD,GAE7D,YADAE,MAAM,+BAGR,IAAIC,EAAeL,EACnB,IAAK,IAAIM,EAAI,EAAGA,EAAIV,EAAkBU,IAAK,CAIzCzB,EAHwByB,EAAI,EAGGD,GAC5BE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,QAAQC,IAAI,uBAAqB3B,QAAiBC,MAAU,IAE7D2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClByB,QAAQC,IAAI,sBAAoB3B,QAAeC,MAAU,IAG7DsB,GAAgBH,C","sources":["src/js/03-promises.js"],"sourcesContent":["const submit = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    resolve({ position, delay });\n  } else {\n    // Reject\n    reject({ position, delay });\n  }\n}, delay);\n});\n}\n\nfunction handlerSubmit(event) {\n  event.preventDefault();\n\n  const inputAmount = document.querySelector('.promis-amount');\n  const inputAmountValue = parseInt(inputAmount.value);\n\n  const inputDelay = document.querySelector('.promis-delay');\n  const inputDelayValue = parseInt(inputDelay.value);\n\n  const inputStep = document.querySelector('.promis-step');\n  const inputStepValue = parseInt(inputStep.value);\n\n  if (isNaN(inputAmountValue) || isNaN(inputDelayValue) || isNaN(inputStepValue)) {\n    alert('Please enter a valid number')\n    return\n  }\n  let currentDelay = inputDelayValue;\n  for (let i = 0; i < inputAmountValue; i++) {\n    const currentPosition = i + 1;\n    \n\n    createPromise(currentPosition, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n    currentDelay += inputStepValue;\n  }\n}\n\nsubmit.addEventListener('submit', handlerSubmit);"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","inputAmount","inputAmountValue","parseInt","value","inputDelay","inputDelayValue","inputStep","inputStepValue","isNaN","alert","currentDelay","i","then","console","log","catch"],"version":3,"file":"03-promises.710dbd6e.js.map"}